apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: cluster-admin
rules:
  - apiGroups: ["*"] # "" indicates the core API group
    resources: ["*", "pods", "deployments", "jobs", "configmaps", "nodes"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups: ["*"]
    resources: ["*", "secrets", "crontabs"]
    verbs: ["*", "get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "user" to read pods in the "default" namespace.
kind: RoleBinding
metadata:
  name: cluster-rb
  namespace: default
subjects:
  - kind: ServiceAccount
    name: admin # Name is case sensitive
    namespace: default
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role #this must be Role or ClusterRole
  name: cluster-admin # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io